/*
 * Copyright (c) 2003 by Naohide Sano, All rights reserved.
 *
 * Programmed by Naohide Sano
 */

package vavi.util;

import junit.framework.TestCase;

import vavi.util.CharConverterJa;


/**
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 * 
 * @author <a href="mailto:vavivavi@yahoo.co.jp">Naohide Sano</a> (nsano)
 * @version 0.00 0xxxxx nsano initial version <br>
 */
public class CharConverterJaTest extends TestCase {
    /** */
    public CharConverterJaTest(String name) {
        super(name);
    }

    /** */
    protected void setUp() throws Exception {
        super.setUp();
    }

    /** */
    protected void tearDown() throws Exception {
        super.tearDown();
    }

    /** */
    String halfKana = "アイウエオ";
    /** */
    String fullHira = "あいうえお";
    /** */
    String fullKana = "アイウエオ";
    /** */
    String halfDakuon = "ガギグゲゴザジズゼゾダヂヅデドバビブベボ";
    /** */
    String fullDakuon = "ガギグゲゴザジズゼゾダヂヅデドバビブベボ";
    /** */
    String halfHandakuon = "パピプペポ";
    /** */
    String fullHandakuon = "パピプペポ";

    /** */
    public void testToKatakana() throws Exception {
        assertTrue(fullKana.equals(CharConverterJa.toKatakana(fullHira)));
    }

    /** */
    public void testToHiragana() throws Exception {
        assertTrue(fullHira.equals(CharConverterJa.toHiragana(fullKana)));
    }

    /** */
    String halfANS = "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
    /** */
    String fullANS = "！\uff02＃＄％＆\uff07（）＊＋，−．／０１２３４５６７８９：；＜＝＞？＠ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ［＼］＾＿｀ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ｛｜｝〜";

    /** */
    public void testToHalfANS() throws Exception {
        // JUnitDoclet begin method toHalfANS
//  System.err.println(CharConverterJa.toHalfANS(fullANS));
//  System.err.println(CharConverterJa.toFullANS(halfANS));
//  for (int i = 0; i < fullANS.length(); i++) {
//   System.err.println(Debug.toHex4(fullANS.charAt(i)) + ": " + (char) fullANS.charAt(i));
//  }
        assertTrue(halfANS.equals(CharConverterJa.toHalfANS(fullANS)));
    }

    /** */
    public void testToHalf() throws Exception {
        assertTrue(halfANS.equals(CharConverterJa.toHalf(fullANS)));
        assertTrue(halfDakuon.equals(CharConverterJa.toHalf(fullDakuon)));
        assertTrue(halfHandakuon.equals(CharConverterJa.toHalf(fullHandakuon)));
    }

    /** */
    public void testToFull() throws Exception {
        assertTrue(fullANS.equals(CharConverterJa.toFull(halfANS)));
        assertTrue(fullDakuon.equals(CharConverterJa.toFull(halfDakuon)));
        assertTrue(fullHandakuon.equals(CharConverterJa.toFull(halfHandakuon)));
    }

    /** */
    public void testToFullANS() throws Exception {
        assertTrue(fullANS.equals(CharConverterJa.toFullANS(halfANS)));
    }

    /** 半角カタカナ */
    String halfKanas = "。「」・ヲァィゥェォャュョッーアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワン゛゜";
    /** 全角カタカナ */
    String fullKanas = "。「」・ヲァィゥェォャュョッーアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワン゛゜";

    /** 全角カタカナ → 半角カタカナ */
    public void testToHalfKana() throws Exception {
        assertTrue(halfKanas.equals(CharConverterJa.toHalfKana(fullKanas)));
    }

    /** 半角カタカナ → 全角カタカナ */
    public void testToFullKana() throws Exception {
        assertTrue(fullKanas.equals(CharConverterJa.toFullKana(halfKanas)));
    }

    /** Runs TEXT UI. */
    public static void main(String[] args) {
        junit.textui.TestRunner.run(CharConverterJaTest.class);
    }
}

/* */
